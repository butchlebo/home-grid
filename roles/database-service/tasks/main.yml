---

- name: Check if postgres service is running
  shell: docker service ls | awk '{print $2}' | grep -v postgres9 | grep postgres
  changed_when: false
  register: postgres_status
  failed_when: postgres_status.rc == 2

- name: Create volume directory for postgres
  hosts: nfs-server[0]
  become: "yes"
  file:
    path: /srv/nfs/postgres
    state: directory
    mode: 0777
  when: postgres_status.rc == 1

- name: Create volume directory for postgres
  hosts: nfs-server[0]
  become: "yes"
  file:
    path: /srv/nfs/postgres/pgdata
    state: directory
    mode: 0777
  when: postgres_status.rc == 1

- name: Deploy postgresql service
  hosts: docker-manager
  command: |
    docker service create -d \
    --name postgres \
    --network mangonet \
    --publish 5432:5432 \
    --mount type=bind,src=/srv/docker-volumes/postgres/pgdata,dst=/var/lib/postgresql/data \
    --env PGDATA=/var/lib/postgresql/data \
    --env POSTGRES_PASSWORD=dbadmin \
    --replicas 1 \
    postgres:latest
  when: postgres_status.rc == 1

- name: Register postgres name with Route53
  connection: local
  route53:
    state: present
    zone: sysmango.net
    record: postgres.sysmango.net
    type: A
    value: 192.168.1.143,192.168.1.224,192.168.1.200
    overwrite: yes
    wait: yes

- name: Wait for port 5432 of any IP to close active connections
  wait_for:
    host: postgres.sysmango.net
    port: 5432
    state: started
    timeout: 5000

# - name: Check if mysql service is running
#   shell: docker service ls | awk '{print $2}' | grep mysql
#   changed_when: false
#   register: mysql_status
#   failed_when: mysql_status.rc == 2

# - name: Create volume directory for mysql
#   hosts: nfs-server[0]
#   become: yes
#   file:
#     path: /srv/nfs/mysql
#     state: directory
#     mode: 0777
#   when: mysql_status.rc == 1

# - name: Create volume directory for mysql
#   hosts: nfs-server[0]
#   become: yes
#   file:
#     path: /srv/nfs/mysql/data
#     state: directory
#     mode: 0777
#   when: mysql_status.rc == 1


# - name: Deploy mysql service
#   hosts: docker-manager
#   shell: |
#     docker service create -d \
#     --name mysql \
#     --network mangonet \
#     --mount type=bind,src=/srv/docker-volumes/mysql/data,dst=/var/lib/mysql \
#     --replicas 1 \
#     --env MYSQL_ROOT_PASSWORD=dbadmin \
#     --env MYSQL_USER=seafile \
#     --env MYSQL_USER=seafileadmin \
#     --env MYSQL_DATABASE=seafile \
#     mariadb
#   when: mysql_status.rc == 1
